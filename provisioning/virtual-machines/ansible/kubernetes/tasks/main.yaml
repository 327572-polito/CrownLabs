---
# Install kubernetes (not configure the cluster)
  
- name: Create docker daemon directory
  file:
    path: /etc/docker
    state: directory

- name: Create docker daemon file
  copy:
    src: files/daemon.json
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: '0644'
  notify: Restart the docker service

- name: Install kubernetes prerequisites
  apt:
    name: "{{ kubernetes_prerequisites }}"
    state: present
    force_apt_get: yes
    update_cache: yes
  vars:
    kubernetes_prerequisites:
    - apt-transport-https
    - curl

- name: Add kubernetes GPG-key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: Add kubernetes repository
  apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    update_cache: yes
    filename: kubernetes.list

- name: Set kubernetes version
  set_fact:
    k8s_pkg_version: 1.19.0-00
    k8s_img_version: v1.19.0
    
- name: Install kubernetes
  apt:
    name: "{{ kubernetes_packages }}"
    state: present
  vars:
    kubernetes_packages: 
    - "kubelet={{ k8s_pkg_version }}"
    - "kubeadm={{ k8s_pkg_version }}"
    - "kubectl={{ k8s_pkg_version }}"
    
- name: pull {{ item }} image
  docker_image:
    name: "{{ item }}"
    source: pull
  loop:
     - k8s.gcr.io/kube-scheduler:{{ k8s_img_version }}
     - k8s.gcr.io/kube-proxy:{{ k8s_img_version }}
     - k8s.gcr.io/kube-controller-manager:{{ k8s_img_version }}
     - k8s.gcr.io/kube-apiserver:{{ k8s_img_version }}

- name: Turn swap off (1/2)
  command: swapoff -a
  
- name: Disable swap (2/2)
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Bridged iptables
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: '1'
    state: present

