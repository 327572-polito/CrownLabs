---
# tasks file for crownlabs

- name: Disable the XFCE logout button
  file:
    path: /usr/bin/xfce4-session-logout
    state: absent

- name: Install cloud-init
  apt:
    name: cloud-init
    state: present

- name: Let non root users to mount webdav folders
  debconf:
    name='davfs2'
    question='davfs2/suid_file'
    vtype='boolean'
    value='true'

- name: Install davfs2 to mount webdav disks
  apt:
    name: davfs2
    state: present

- name: Add the local user to the davfs2 group
  user:
    name: "{{ username }}"
    append: yes
    groups: davfs2


- name: Set the TigerVNC variables
  set_fact:
    tigervnc_version: "1.10.1"
    vnc_user_path: "/home/{{ username }}/.vnc"
    vnc_service_name: "vncserver@:1.service"
    vnc_service_path: "/etc/systemd/system"

- name: Install TigerVNC
  unarchive:
    remote_src: yes
    src: https://dl.bintray.com/tigervnc/stable/tigervnc-{{ tigervnc_version }}.x86_64.tar.gz
    dest: /
    extra_opts:
    - --strip-components=1

- name: Create the vnc folder for the user
  file:
    path: "{{ vnc_user_path }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Copy the vnc xstartup configuration
  copy:
    src: files/xstartup
    dest: "{{ vnc_user_path }}/xstartup"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0755"

- name: Create the vncserver service
  template:
    src: templates/vncserver.service
    dest: "{{ vnc_service_path }}/{{ vnc_service_name }}"

- name: Enable the vncserver service
  systemd:
    name: "{{ vnc_service_name }}"
    enabled: yes
    daemon_reload: yes


- name: Set the NoVNC variables
  set_fact:
    novnc_version: "v1.1.3-crown"
    novnc_websockify_version: "v0.9.0"
    novnc_path: "/usr/share/novnc"
    novnc_websockify_path: "/usr/share/novnc/utils/websockify"
    novnc_port: "6080"
    novnc_service_name: "novnc.service"
    novnc_service_path: "/etc/systemd/system"

- name: Install the NoVNC dependencies
  apt:
    name: python-numpy
    state: present

- name: Create the NoVNC folders
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ novnc_path }}"
    - "{{ novnc_websockify_path }}"

- name: Install NoVNC
  unarchive:
    remote_src: yes
    src: https://github.com/netgroup-polito/noVNC/archive/{{ novnc_version }}.tar.gz
    dest: "{{ novnc_path }}"
    extra_opts:
    - --strip-components=1

- name: Link to NoVNC landing page for easy url access
  file:
    src: "{{ novnc_path }}/vnc.html"
    dest: "{{ novnc_path }}/index.html"
    state: link

- name: Install NoVNC websockify
  unarchive:
    remote_src: yes
    src: https://github.com/novnc/websockify/archive/{{ novnc_websockify_version }}.tar.gz
    dest: "{{ novnc_websockify_path }}"
    extra_opts:
    - --strip-components=1

- name: Create the NoVNC service
  template:
    src: templates/novnc.service
    dest: "{{ novnc_service_path }}/{{ novnc_service_name }}"

- name: Enable the NoVNC service
  systemd:
    name: "{{ novnc_service_name }}"
    enabled: yes
    daemon_reload: yes


- name: Set the node exporter variables
  set_fact:
    nodeexporter_version: "0.18.1"
    nodeexporter_path: "/usr/local/bin/"
    nodeexporter_service_name: "node_exporter.service"
    nodeexporter_service_path: "/etc/systemd/system"
    nodeexporter_user: node_exporter

- name: Install node exporter
  unarchive:
    remote_src: yes
    src: https://github.com/prometheus/node_exporter/releases/download/v{{ nodeexporter_version }}/node_exporter-{{ nodeexporter_version }}.linux-amd64.tar.gz
    dest: "{{ nodeexporter_path }}"
    exclude:
    - LICENSE
    - NOTICE
    extra_opts:
    - --strip-components=1

- name: Create the {{ nodeexporter_user }} user
  user:
    name: "{{ nodeexporter_user }}"
    state: present
    shell: "/sbin/nologin"
    create_home: no
    system: yes

- name: Create the node exporter service
  template:
    src: templates/node_exporter.service
    dest: "{{ nodeexporter_service_path }}/{{ nodeexporter_service_name }}"

- name: Enable the node exporter service
  systemd:
    name: "{{ nodeexporter_service_name }}"
    enabled: yes
    daemon_reload: yes